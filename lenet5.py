# -*- coding: utf-8 -*-
# author: Riley Bennett
"""Lenet5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13FD2jQdI0P5mVhWmzOPrAM9fbOq0V5my
"""
import tensorflow as tf
from tensorflow import keras
from keras import Model

from keras.layers import Conv2D, AveragePooling2D, Flatten, Dense
from keras.losses import categorical_crossentropy
from keras.utils import to_categorical
import numpy as nm

model = keras.Sequential([
    keras.Input(shape = (28, 28, 1)),
    Conv2D(kernel_size = (5, 5), filters = 6, activation = 'sigmoid',
           padding = 'same'),
    AveragePooling2D(pool_size = (2 ,2), strides = 2, padding = 'valid'),
    Conv2D(kernel_size = (5, 5), filters = 16, activation = 'sigmoid'),
    AveragePooling2D(pool_size = (2, 2), strides = 2, padding = 'valid'),
    Flatten(),
    Dense(120, activation = 'sigmoid'),
    Dense(84, activation = 'sigmoid'),
    Dense(10, activation = 'softmax')
])

model.compile(optimizer = 'adam', loss = categorical_crossentropy, metrics=['accuracy'])
model.summary()

(image_train, label_train), (image_test, label_test) = tf.keras.datasets.mnist.load_data()
image_train = image_train[:, :, :, nm.newaxis]
image_test = image_test[:, :, :, nm.newaxis]
image_train = image_train.astype('float32')
image_test = image_test.astype('float32')
image_train = image_train / 255
image_test = image_test / 255

label_train = to_categorical(label_train, 10)
label_test = to_categorical(label_test, 10)

model.fit(x = image_train, y = label_train, epochs = 2)

model.evaluate(image_test, label_test, verbose=2)